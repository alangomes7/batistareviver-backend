package com.reviver.apirestfull.model;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import java.math.BigDecimal;
import java.time.LocalDate;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

/**
 * Represents a product in the system. This class maps to a 'products' table in the database and
 * holds details about a product, such as its name, price, stock, and availability.
 */
@NoArgsConstructor
@Getter
@Setter
@Entity
public class Product {
  /** The unique identifier for the product, automatically generated by the database. */
  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  private Long id;

  /** The URL or path to the product's image. */
  private String image;

  /** The name of the product. */
  private String name;

  /** A URL-friendly identifier for the product, often used in permalinks. */
  private String slug;

  /** A detailed description of the product. */
  private String description;

  /** A boolean indicating if the product is currently available for purchase. */
  private boolean available;

  /** The number of units of the product currently in stock. */
  private int stockQuantity;

  /** The price of the product. Using BigDecimal is recommended for monetary values. */
  private BigDecimal price;

  /** The date the product was added to the system. */
  private LocalDate registrationDate;

  /** The category to which the product belongs. */
  private String category;

  /**
   * Constructs a new Product with the specified details.
   *
   * @param image The URL or path to the product's image.
   * @param category The category to which the product belongs.
   * @param registrationDate The date the product was registered.
   * @param price The price of the product.
   * @param stockQuantity The number of units of the product in stock.
   * @param available A boolean indicating if the product is currently available.
   * @param description A detailed description of the product.
   * @param slug The URL-friendly string identifier for the product.
   * @param name The name of the product.
   */
  public Product(
      String image,
      String category,
      LocalDate registrationDate,
      BigDecimal price,
      int stockQuantity,
      boolean available,
      String description,
      String slug,
      String name) {
    this.image = image;
    this.category = category;
    this.registrationDate = registrationDate;
    this.price = price;
    this.stockQuantity = stockQuantity;
    this.available = available;
    this.description = description;
    this.slug = slug;
    this.name = name;
  }
}
